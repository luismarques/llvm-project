//===-- lldb-riscv-linux-register-enums.h -----------------------*- C++ -*-===//
//
// Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.
// See https://llvm.org/LICENSE.txt for license information.
// SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
//
//===----------------------------------------------------------------------===//

#ifndef LLDB_SOURCE_PLUGINS_PROCESS_UTILITY_LLDB_RISCV_LINUX_REGISTER_ENUMS_H
#define LLDB_SOURCE_PLUGINS_PROCESS_UTILITY_LLDB_RISCV_LINUX_REGISTER_ENUMS_H

namespace lldb_private {
// LLDB register codes (e.g. RegisterKind == eRegisterKindLLDB)

// Internal codes for all riscv registers.
enum {
  k_first_gpr_riscv,
  gpr_zero_riscv = k_first_gpr_riscv,
  gpr_r1_riscv,
  gpr_r2_riscv,
  gpr_r3_riscv,
  gpr_r4_riscv,
  gpr_r5_riscv,
  gpr_r6_riscv,
  gpr_r7_riscv,
  gpr_r8_riscv,
  gpr_r9_riscv,
  gpr_r10_riscv,
  gpr_r11_riscv,
  gpr_r12_riscv,
  gpr_r13_riscv,
  gpr_r14_riscv,
  gpr_r15_riscv,
  gpr_r16_riscv,
  gpr_r17_riscv,
  gpr_r18_riscv,
  gpr_r19_riscv,
  gpr_r20_riscv,
  gpr_r21_riscv,
  gpr_r22_riscv,
  gpr_r23_riscv,
  gpr_r24_riscv,
  gpr_r25_riscv,
  gpr_r26_riscv,
  gpr_r27_riscv,
  gpr_gp_riscv,
  gpr_sp_riscv,
  gpr_r30_riscv,
  gpr_ra_riscv,
  gpr_sr_riscv,
  gpr_mullo_riscv,
  gpr_mulhi_riscv,
  gpr_badvaddr_riscv,
  gpr_cause_riscv,
  gpr_pc_riscv,
  gpr_config5_riscv,

  k_last_gpr_riscv = gpr_config5_riscv,

  k_first_fpr_riscv,
  fpr_f0_riscv = k_first_fpr_riscv,
  fpr_f1_riscv,
  fpr_f2_riscv,
  fpr_f3_riscv,
  fpr_f4_riscv,
  fpr_f5_riscv,
  fpr_f6_riscv,
  fpr_f7_riscv,
  fpr_f8_riscv,
  fpr_f9_riscv,
  fpr_f10_riscv,
  fpr_f11_riscv,
  fpr_f12_riscv,
  fpr_f13_riscv,
  fpr_f14_riscv,
  fpr_f15_riscv,
  fpr_f16_riscv,
  fpr_f17_riscv,
  fpr_f18_riscv,
  fpr_f19_riscv,
  fpr_f20_riscv,
  fpr_f21_riscv,
  fpr_f22_riscv,
  fpr_f23_riscv,
  fpr_f24_riscv,
  fpr_f25_riscv,
  fpr_f26_riscv,
  fpr_f27_riscv,
  fpr_f28_riscv,
  fpr_f29_riscv,
  fpr_f30_riscv,
  fpr_f31_riscv,
  fpr_fcsr_riscv,
  fpr_fir_riscv,
  fpr_config5_riscv,
  k_last_fpr_riscv = fpr_config5_riscv,

  k_num_registers_riscv,

  k_num_gpr_registers_riscv = k_last_gpr_riscv - k_first_gpr_riscv + 1,
  k_num_fpr_registers_riscv = k_last_fpr_riscv - k_first_fpr_riscv + 1,
  k_num_user_registers_riscv = k_num_gpr_registers_riscv +
                              k_num_fpr_registers_riscv
};

// Register no. for RegisterKind = eRegisterKindProcessPlugin
// The ptrace request PTRACE_PEEKUSER/PTRACE_POKEUSER used this number
enum {
  ptrace_zero_riscv,
  ptrace_r1_riscv,
  ptrace_r2_riscv,
  ptrace_r3_riscv,
  ptrace_r4_riscv,
  ptrace_r5_riscv,
  ptrace_r6_riscv,
  ptrace_r7_riscv,
  ptrace_r8_riscv,
  ptrace_r9_riscv,
  ptrace_r10_riscv,
  ptrace_r11_riscv,
  ptrace_r12_riscv,
  ptrace_r13_riscv,
  ptrace_r14_riscv,
  ptrace_r15_riscv,
  ptrace_r16_riscv,
  ptrace_r17_riscv,
  ptrace_r18_riscv,
  ptrace_r19_riscv,
  ptrace_r20_riscv,
  ptrace_r21_riscv,
  ptrace_r22_riscv,
  ptrace_r23_riscv,
  ptrace_r24_riscv,
  ptrace_r25_riscv,
  ptrace_r26_riscv,
  ptrace_r27_riscv,
  ptrace_gp_riscv,
  ptrace_sp_riscv,
  ptrace_r30_riscv,
  ptrace_ra_riscv,
  ptrace_f0_riscv,
  ptrace_f1_riscv,
  ptrace_f2_riscv,
  ptrace_f3_riscv,
  ptrace_f4_riscv,
  ptrace_f5_riscv,
  ptrace_f6_riscv,
  ptrace_f7_riscv,
  ptrace_f8_riscv,
  ptrace_f9_riscv,
  ptrace_f10_riscv,
  ptrace_f11_riscv,
  ptrace_f12_riscv,
  ptrace_f13_riscv,
  ptrace_f14_riscv,
  ptrace_f15_riscv,
  ptrace_f16_riscv,
  ptrace_f17_riscv,
  ptrace_f18_riscv,
  ptrace_f19_riscv,
  ptrace_f20_riscv,
  ptrace_f21_riscv,
  ptrace_f22_riscv,
  ptrace_f23_riscv,
  ptrace_f24_riscv,
  ptrace_f25_riscv,
  ptrace_f26_riscv,
  ptrace_f27_riscv,
  ptrace_f28_riscv,
  ptrace_f29_riscv,
  ptrace_f30_riscv,
  ptrace_f31_riscv,
  ptrace_pc_riscv,
  ptrace_cause_riscv,
  ptrace_badvaddr_riscv,
  ptrace_mulhi_riscv,
  ptrace_mullo_riscv,
  ptrace_fcsr_riscv,
  ptrace_fir_riscv,
  ptrace_sr_riscv,
  ptrace_config5_riscv
};
}

#endif // LLDB_SOURCE_PLUGINS_PROCESS_UTILITY_LLDB_RISCV_LINUX_REGISTER_ENUMS_H
