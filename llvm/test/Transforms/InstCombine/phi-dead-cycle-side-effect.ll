; NOTE: Assertions have been autogenerated by utils/update_test_checks.py
; RUN: opt < %s -passes=instcombine -S | FileCheck %s
; Ensure that instructions with side effects don't cause the cycle to be removed
define void @sideEffect(ptr %p) {
; CHECK-LABEL: @sideEffect(
; CHECK-NEXT:  entry:
; CHECK-NEXT:    br label [[A:%.*]]
; CHECK:       a:
; CHECK-NEXT:    [[PHI_A:%.*]] = phi i32 [ 0, [[ENTRY:%.*]] ], [ [[X:%.*]], [[A]] ]
; CHECK-NEXT:    [[TMP0:%.*]] = sext i32 [[PHI_A]] to i64
; CHECK-NEXT:    [[Q:%.*]] = getelementptr i32, ptr [[P:%.*]], i64 [[TMP0]]
; CHECK-NEXT:    [[X]] = load volatile i32, ptr [[Q]], align 4
; CHECK-NEXT:    br i1 false, label [[A]], label [[B:%.*]]
; CHECK:       b:
; CHECK-NEXT:    br label [[B]]
;
entry:
  br label %a
a:
  %phi.a = phi i32 [ 0, %entry ], [ %x, %a ]
  %q = getelementptr i32, ptr %p, i32 %phi.a
  %x = load volatile i32, ptr %q
  br i1 false, label %a, label %b
b:
  %phi.b = phi i32 [ %x, %a ], [ %y, %b ]
  %y = add i32 %phi.b, 1
  br label %b
}
